#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operations. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    commands:
      - func: run-make
        vars: { target: "${task_name}" }

#######################################
#              Functions              #
#######################################
functions:
  get-project:
    command: git.get_project
    type: setup
    params:
      directory: gopath/src/github.com/evergreen-ci/cedar
  parse-results:
    command: gotest.parse_files
    type: setup
    params:
      files:
        - "gopath/src/github.com/evergreen-ci/cedar/build/output.*"
  setup-credentials:
    command: shell.exec
    type: setup
    params:
      silent: true
      script: |
        if [ "Windows_NT" == "$OS" ]; then
          export AWS_DIR=/cygdrive/c/Users/$USER/.aws
        else
          export AWS_DIR=$HOME/.aws
        fi

        mkdir $AWS_DIR
        cat <<EOF > $AWS_DIR/config
        [default]
        region = us-east-1
        EOF
        cat <<EOF > $AWS_DIR/credentials
        [default]
        aws_access_key_id = ${aws_key}
        aws_secret_access_key = ${aws_secret}
        EOF
  run-make:
    command: subprocess.exec
    type: test
    params:
      working_dir: gopath/src/github.com/evergreen-ci/cedar/
      binary: make
      args: ["${make_args|}", "${target}"]
      add_expansions_to_env: true
      env:
        GOPATH: ${workdir}/gopath
        VENDOR_PKG: "github.com/${trigger_repo_owner}/${trigger_repo_name}"
        VENDOR_REVISION: ${trigger_revision}
  set-up-mongodb:
    - command: subprocess.exec
      type: setup
      params:
        add_expansions_to_env: true
        env:
          DECOMPRESS: ${decompress}
        working_dir: gopath/src/github.com/evergreen-ci/cedar/
        command: make get-mongodb
    - command: subprocess.exec
      type: setup
      params:
        background: true
        working_dir: gopath/src/github.com/evergreen-ci/cedar/
        add_expansions_to_env: true
        command: make start-mongod
    - command: subprocess.exec
      type: setup
      params:
        working_dir: gopath/src/github.com/evergreen-ci/cedar/
        add_expansions_to_env: true
        command: make check-mongod
    - command: subprocess.exec
      type: setup
      params:
        add_expansions_to_env: true
        working_dir: gopath/src/github.com/evergreen-ci/cedar/
        command: make init-rs
  set-up-curator:
    - command: s3.get
      type: setup
      params:
        aws_key: ${curator_aws_key}
        aws_secret: ${curator_aws_secret}
        remote_file: build/curator/curator-dist-ubuntu1604-${curator_release|latest}.tar.gz
        extract_to: gopath/src/github.com/evergreen-ci/cedar/rpc/internal/
        bucket: boxes.10gen.com

#######################################
#                Tasks                #
#######################################

tasks:
  - <<: *run-build
    tags: ["test"]
    name: test-rpc-internal
  - <<: *run-build
    tags: ["test"]
    name: test-operations
  - <<: *run-build
    tags: ["test"]
    name: test-model
  - <<: *run-build
    tags: ["test"]
    name: test-model
  - <<: *run-build
    tags: ["test"]
    name: test-cost
  - <<: *run-build
    tags: ["test"]
    name: test-rest-model
  - <<: *run-build
    tags: ["test"]
    name: test-rest-data
  - <<: *run-build
    tags: ["test"]
    name: test-rest
  - <<: *run-build
    tags: ["test"]
    name: test-util
  - <<: *run-build
    tags: ["test"]
    name: test-units
  - <<: *run-build
    tags: ["test"]
    name: test-cedar
  - <<: *run-build
    tags: ["test"]
    name: test-perf
  - <<: *run-build
    tags: ["test"]
    name: test-depgraph

  - <<: *run-build
    tags: ["lint"]
    name: lint-rpc-internal
  - <<: *run-build
    tags: ["lint"]
    name: lint-operations
  - <<: *run-build
    tags: ["lint"]
    name: lint-model
  - <<: *run-build
    tags: ["lint"]
    name: lint-model
  - <<: *run-build
    tags: ["lint"]
    name: lint-cost
  - <<: *run-build
    tags: ["lint"]
    name: lint-rest-model
  - <<: *run-build
    tags: ["lint"]
    name: lint-rest-data
  - <<: *run-build
    tags: ["lint"]
    name: lint-rest
  - <<: *run-build
    tags: ["lint"]
    name: lint-util
  - <<: *run-build
    tags: ["lint"]
    name: lint-units
  - <<: *run-build
    tags: ["lint"]
    name: lint-cedar
  - <<: *run-build
    tags: ["lint"]
    name: lint-perf
  - <<: *run-build
    tags: ["lint"]
    name: lint-depgraph


task_groups:
  - name: lintGroup
    tasks: [ ".lint"]
    max_hosts: 2
    setup_group:
      - func: get-project
    setup_task:
      - func: run-make
        vars: { target: "clean-results" }
    teardown_task:
      - func: parse-results
  - name: testGroup
    tasks: [ ".test"]
    max_hosts: 2
    setup_group_can_fail_task: true
    share_processes: true
    setup_group:
      - func: get-project
      - func: set-up-mongodb
      - func: set-up-curator
    setup_task:
      - func: run-make
        vars: { target: "clean-results" }
    teardown_task:
      - func: parse-results

#######################################
#           Buildvariants             #
#######################################
buildvariants:
  - name: race-detector
    display_name: Race Detector (Arch Linux)
    expansions:
      RACE_DETECTOR: true
      MONGODB_URL: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.1.tgz
      GO_BIN_PATH: /opt/golang/go1.12/bin/go
      GOROOT: /opt/golang/go1.12
    run_on:
      - archlinux-test
    tasks: [ "testGroup" ]

  - name: lint
    display_name: Lint (Arch Linux)
    run_on:
      - archlinux-test
    tasks: [ "lintGroup" ]

  - name: ubuntu1604
    display_name: Ubuntu 16.04
    expansions:
      DISABLE_COVERAGE: true
      GO_BIN_PATH: /opt/golang/go1.9/bin/go
      GOROOT: /opt/golang/go1.9
      MONGODB_URL: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.1.tgz
    run_on:
      - ubuntu1604-test
    tasks: [ "testGroup" ]

  - name: macos
    display_name: macOS
    expansions:
      DISABLE_COVERAGE: true
      GO_BIN_PATH: /opt/golang/go1.9/bin/go
      GOROOT: /opt/golang/go1.9
      MONGODB_URL: https://fastdl.mongodb.org/osx/mongodb-osx-x86_64-4.0.1.tgz
    run_on:
      - macos-1014
    tasks: [ "testGroup" ]

  - name: windows
    display_name: Windows
    run_on:
      - windows-64-vs2017-test
      - windows-64-vs2015-test
      - windows-64-vs2015-small
      - windows-64-vs2017-compile
      - windows-64-vs2015-compile
      - windows-64-vs2015-large
    expansions:
      mongodb_url: https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-4.0.1.zip
      build_env: "GOROOT=c:/golang/go1.11 PATH=/cygdrive/c/golang/go1.11/bin:$PATH DISABLE_COVERAGE=true"
      extension: ".exe"
      archiveExt: ".zip"
      curator_url: https://s3.amazonaws.com/boxes.10gen.com/build/curator/curator-dist-windows-64-latest.tar.gz
    tasks:
      - name: ".test"
      - name: "dist"
