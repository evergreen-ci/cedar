stepback: false
ignore:
  - "*.rst"

#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operations. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    must_have_test_results: true
    commands:
      - func: run-make
        vars: { target: "${task_name}" }

#######################################
#              Functions              #
#######################################
functions:
  get-project-and-modules:
    - command: git.get_project
      type: system
      params:
        directory: cedar
    - command: subprocess.exec
      type: setup
      params:
        working_dir: cedar
        binary: make
        args: ["mod-tidy"]
        include_expansions_in_env: ["GOROOT"]
  parse-results:
    command: gotest.parse_files
    type: setup
    params:
      files:
        - "cedar/build/output.*"
  run-make:
    command: subprocess.exec
    type: test
    params:
      working_dir: cedar
      binary: make
      args: ["${target}"]
      include_expansions_in_env: ["GOROOT", "RACE_DETECTOR"]
      env:
        AWS_ACCESS_KEY_ID: ${aws_key}
        AWS_SECRET_ACCESS_KEY: ${aws_secret}
  set-up-mongodb:
    - command: subprocess.exec
      type: setup
      params:
        include_expansions_in_env: ["MONGODB_URL"]
        working_dir: cedar
        command: make get-mongodb
        env:
          MONGODB_DECOMPRESS: ${MONGODB_DECOMPRESS|*decompress}
    - command: subprocess.exec
      type: setup
      params:
        include_expansions_in_env: ["MONGOSH_URL"]
        working_dir: cedar
        command: make get-mongosh
        env:
          MONGOSH_DECOMPRESS: ${MONGOSH_DECOMPRESS|*decompress}
    - command: subprocess.exec
      type: setup
      params:
        background: true
        working_dir: cedar
        include_expansions_in_env: ["MONGODB_URL"]
        command: make start-mongod
    - command: subprocess.exec
      type: setup
      params:
        working_dir: cedar
        include_expansions_in_env: ["MONGODB_URL"]
        command: make check-mongod
    - command: subprocess.exec
      type: setup
      params:
        working_dir: cedar
        include_expansions_in_env: ["MONGODB_URL"]
        command: make init-rs
  set-up-curator:
    - command: s3.get
      type: setup
      params:
        aws_key: ${aws_key}
        aws_secret: ${aws_secret}
        remote_file: build/curator/curator-dist-${curator_build}-${curator_release|latest}.tar.gz
        extract_to: cedar/rpc/internal
        bucket: boxes.10gen.com

#######################################
#                Tasks                #
#######################################

tasks:
  - name: dist
    tags: ["dist"]
    commands:
      - func: get-project-and-modules
      - func: run-make
        vars: { target: "${task_name}" }
      - command: s3.put
        type: system
        params:
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: cedar/build/${task_name}.tar.gz
          remote_file: sink/${build_id}/cedar-${task_name}-${revision}.tar.gz
          bucket: mciuploads
          content_type: application/x-gzip
          permissions: public-read
          display_name: dist.tar.gz (standard)

  - <<: *run-build
    tags: ["test"]
    name: test-rpc-internal
  - <<: *run-build
    tags: ["test"]
    name: test-operations
  - <<: *run-build
    tags: ["test"]
    name: test-model
  - <<: *run-build
    tags: ["test"]
    name: test-rest-model
  - <<: *run-build
    tags: ["test"]
    name: test-rest-data
  - <<: *run-build
    tags: ["test"]
    name: test-rest
  - <<: *run-build
    tags: ["test"]
    name: test-units
  - <<: *run-build
    tags: ["test"]
    name: test-cedar

  - <<: *run-build
    tags: ["lint"]
    name: lint-rpc-internal
  - <<: *run-build
    tags: ["lint"]
    name: lint-benchmarks
  - <<: *run-build
    tags: ["lint"]
    name: lint-rpc
  - <<: *run-build
    tags: ["lint"]
    name: lint-operations
  - <<: *run-build
    tags: ["lint"]
    name: lint-model
  - <<: *run-build
    tags: ["lint"]
    name: lint-rest-model
  - <<: *run-build
    tags: ["lint"]
    name: lint-rest-data
  - <<: *run-build
    tags: ["lint"]
    name: lint-rest
  - <<: *run-build
    tags: ["lint"]
    name: lint-units
  - <<: *run-build
    tags: ["lint"]
    name: lint-cedar

  - name: verify-mod-tidy
    tags: ["report"]
    commands:
      - command: git.get_project
        type: system
        params:
          directory: cedar
      - func: run-make
        vars: { target: "${task_name}" }


task_groups:
  - name: lintGroup
    tasks: [".lint"]
    max_hosts: 2
    setup_group:
      - func: get-project-and-modules
    setup_task:
      - func: run-make
        vars: { target: "clean-results" }
    teardown_task:
      - func: parse-results
  - name: testGroup
    tasks: [".test"]
    max_hosts: 2
    setup_group_can_fail_task: true
    share_processes: true
    setup_group:
      - func: get-project-and-modules
      - func: set-up-mongodb
      - func: set-up-curator
      - func: run-make
        vars: { target: "cedar" }
    setup_task:
      - func: run-make
        vars: { target: "clean-results" }
    teardown_task:
      - func: parse-results
    teardown_group:
      - command: shell.exec
        type: setup
        params:
          script: "rm -rf ~/.aws"

#######################################
#           Buildvariants             #
#######################################
buildvariants:
  - name: lint
    display_name: Lint
    expansions:
      GOROOT: /opt/golang/go1.20
    run_on:
      - ubuntu2004-small
    tasks:
      - name: lintGroup
      - name: verify-mod-tidy

  - name: ubuntu
    display_name: Ubuntu 20.04
    expansions:
      GOROOT: /opt/golang/go1.20
      MONGODB_URL: https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-ubuntu2004-7.0.7.tgz
      MONGOSH_URL: https://downloads.mongodb.com/compass/mongosh-2.2.2-linux-x64.tgz
      RACE_DETECTOR: true
      curator_build: linux-amd64
    run_on:
      - ubuntu2004-small
    tasks: [ "dist", "testGroup" ]

  - name: macos
    display_name: macOS
    expansions:
      GOROOT: /opt/golang/go1.20
      MONGODB_URL: https://fastdl.mongodb.org/osx/mongodb-macos-arm64-7.0.7.tgz
      MONGOSH_URL: https://downloads.mongodb.com/compass/mongosh-2.2.2-darwin-arm64.zip
      MONGOSH_DECOMPRESS: unzip
      curator_build: darwin-amd64
    run_on:
      - macos-1100-arm64
    tasks: [ "testGroup" ]

  - name: windows
    display_name: Windows
    run_on:
      - windows-vsCurrent-small
    expansions:
      MONGODB_URL: https://fastdl.mongodb.org/windows/mongodb-windows-x86_64-7.0.7.zip
      MONGOSH_URL: https://downloads.mongodb.com/compass/mongosh-2.2.2-win32-x64.zip
      GOROOT: C:/golang/go1.20
      curator_build: windows-amd64
    tasks: [ "testGroup" ]
