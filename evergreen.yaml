stepback: false
loggers:
  task:
    - type: splunk
      splunk_server: https://http-inputs-mongodb.splunkcloud.com
      splunk_token: ${splunk_token}
    - type: evergreen
  agent:
    - type: evergreen
  system:
    - type: evergreen
ignore:
    - "*.rst"

#######################################
#         YAML Templates              #
#######################################
variables:
  - &run-build
    # runs a build operations. The task name in evergreen should
    # correspond to a make target for the build operation.
    name: test
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/evergreen-ci/cedar
      - func: run-make
        vars: { target: "${task_name}" }
      - command: s3.put
        type: system
        params:
          optional: true
          aws_key: ${aws_key}
          aws_secret: ${aws_secret}
          local_file: gopath/src/github.com/evergreen-ci/cedar/build/${task_name}.tar.gz
          remote_file: sink/${build_id}/cedar-${task_name}-${revision}.tar.gz
          bucket: mciuploads
          content_type: application/x-gzip
          permissions: public-read
          display_name: dist.tar.gz (standard)

  - &run-build-with-mongodb
    # runs a make target above, but only on systems that have a
    # running mongod started for testing.
    name: test
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/evergreen-ci/cedar
      - func: setup-mongodb
      - func: setup-credentials
      - func: setup-curator
      - func: run-make
        vars: { target: "${task_name}" }


#######################################
#              Functions              #
#######################################
functions:
  setup-credentials:
    command: shell.exec
    type: setup
    params:
       silent: true
       script: |
         mkdir ~/.aws
         cat <<EOF > ~/.aws/config
         [default]
         region = us-east-1
         EOF
         cat <<EOF > ~/.aws/credentials
         [default]
         aws_access_key_id = ${aws_key}
         aws_secret_access_key = ${aws_secret}
         EOF
  run-make:
    command: shell.exec
    type: test
    params:
       silent: true
       script: |
         set -o errexit

         # Configure a local go path for this build.
         export GOPATH=`pwd`/gopath

         # Export ldap user and password for testing.
         export LDAP_USER=${ldap_user}
         export LDAP_PASSWORD=${ldap_password}

         # on windows we need to turn the slashes the other way
         if [ "Windows_NT" == "$OS" ]; then
            export GOPATH=$(cygpath -m $GOPATH)
         fi

         cd gopath/src/github.com/evergreen-ci/cedar

         # Run make, called with proper environment variables set,
         # running the target.
         ${build_env|} make -k ${target}
  setup-mongodb:
    - command: shell.exec
      type: setup
      params:
        script: |
          set -o errexit
          set -o verbose

          rm -rf mongodb
          mkdir mongodb
          cd mongodb
          curl ${mongodb_url} -o mongodb${archiveExt|.tgz}

          ${decompress} mongodb${archiveExt|.tgz}
          chmod +x ./mongodb-*/bin/*
          mv ./mongodb-*/bin/* .
          rm -rf db_files
          rm -rf db_logs
          mkdir db_files
          mkdir db_logs
    - command: shell.exec
      type: setup
      params:
        background: true
        script: |
          set -o errexit
          set -o verbose

          cd mongodb
          echo "starting mongod..."
          ./mongod${extension|} --dbpath ./db_files &
          echo "waiting for mongod to start up"
    - command: shell.exec
      type: setup
      params:
        script: |
          set -o errexit
          set -o verbose

          cd mongodb
          ./mongo${extension|} --nodb --eval 'assert.soon(function(x){try{var d = new Mongo("localhost:27017"); return true}catch(e){return false}}, "timed out connecting")'
          echo "mongod is up."
  setup-curator:
    - command: shell.exec
      type: setup
      params:
        script: |
          set -o errexit
          set -o verbose

          curl ${curator_url} -o curator.tgz
          tar zxvf curator.tgz
          mv curator gopath/src/github.com/evergreen-ci/cedar/rpc/internal

#######################################
#                Tasks                #
#######################################
post:
  - command: gotest.parse_files
    type: setup
    params:
      files:
        - "gopath/src/github.com/evergreen-ci/cedar/build/output.*"
        - "gopath/src/github.com/evergreen-ci/cedar/build/test.*.out"
  - command: shell.exec
    type: setup
    params:
      script:
        rm -rf ~/.aws
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/evergreen-ci/cedar/build/output.*.coverage.html"]
      remote_file: cedar/${task_id}/
      bucket: mciuploads
      content_type: text/html
      permissions: public-read
      display_name: "(html) coverage:"
  - command: s3.put
    type: system
    params:
      aws_key: ${aws_key}
      aws_secret: ${aws_secret}
      local_files_include_filter: ["gopath/src/github.com/evergreen-ci/cedar/build/output.*.coverage"]
      remote_file: cedar/${task_id}/
      bucket: mciuploads
      content_type: text/plain
      permissions: public-read
      display_name: "(txt) coverage:"

tasks:
  # the build (with and without the race detector) and lint tasks use
  # a template that does not include test result parsing.
  - name: lint
    tags: ["report"]
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/evergreen-ci/cedar
      - func: run-make
        vars: { target: "lint" }

  - name: coverage
    tags: ["report"]
    commands:
      - command: git.get_project
        type: system
        params:
          directory: gopath/src/github.com/evergreen-ci/cedar
      - func: setup-mongodb
      - func: setup-credentials
      - func: setup-curator
      - func: run-make
        vars:
          target: "coverage-html"

  - <<: *run-build
    tags: ["dist"]
    name: dist

  - <<: *run-build-with-mongodb
    tags: ["test"]
    name: test

#######################################
#           Buildvariants             #
#######################################
buildvariants:
  - name: race-detector
    display_name: Race Detector (Arch Linux)
    expansions:
      build_env: "RACE_DETECTOR=true"
      mongodb_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.1.tgz
      curator_url: https://s3.amazonaws.com/boxes.10gen.com/build/curator/curator-dist-ubuntu1604-latest.tar.gz
    run_on:
      - archlinux-test
    tasks:
      - name: ".test"

  - name: coverage
    display_name: Coverage (Arch Linux)
    expansions:
      mongodb_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.1.tgz
      curator_url: https://s3.amazonaws.com/boxes.10gen.com/build/curator/curator-dist-ubuntu1604-latest.tar.gz
    run_on:
      - archlinux-test
    tasks:
      - name: ".report"

  - name: ubuntu1604
    display_name: Ubuntu 16.04
    expansions:
      mongodb_url: http://fastdl.mongodb.org/linux/mongodb-linux-x86_64-4.0.1.tgz
      build_env: "GOROOT=/opt/golang/go1.11 PATH=/opt/golang/go1.11/bin:$PATH DISABLE_COVERAGE=true"
      curator_url: https://s3.amazonaws.com/boxes.10gen.com/build/curator/curator-dist-ubuntu1604-latest.tar.gz
    run_on:
      - ubuntu1604-test
    tasks:
      - name: ".test"
      - name: "dist"

  - name: macos
    display_name: macOS 10.12
    expansions:
      mongodb_url: https://fastdl.mongodb.org/osx/mongodb-osx-ssl-x86_64-4.0.1.tgz
      build_env: "GOROOT=/opt/golang/go1.11 PATH=/opt/golang/go1.11/bin:$PATH DISABLE_COVERAGE=true"
      curator_url: https://s3.amazonaws.com/boxes.10gen.com/build/curator/curator-dist-macos-latest.tar.gz
    run_on:
      - macos-1012
    tasks:
      - name: ".test"
      - name: "dist"

  - name: windows
    display_name: Windows
    run_on:
      - windows-64-vs2015-small
    expansions:
      mongodb_url: https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-4.0.1.zip
      build_env: "GOROOT=c:/golang/go1.11 PATH=/cygdrive/c/golang/go1.11/bin:$PATH DISABLE_COVERAGE=true"
      extension: ".exe"
      archiveExt: ".zip"
      curator_url: https://s3.amazonaws.com/boxes.10gen.com/build/curator/curator-dist-windows-64-latest.tar.gz
    tasks:
      - name: ".test"
      - name: "dist"
