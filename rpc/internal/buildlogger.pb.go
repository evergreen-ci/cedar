// Code generated by protoc-gen-go. DO NOT EDIT.
// source: buildlogger.proto

package internal

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type LogFormat int32

const (
	LogFormat_LOG_FORMAT_UNKNOWN LogFormat = 0
	LogFormat_LOG_FORMAT_TEXT    LogFormat = 1
	LogFormat_LOG_FORMAT_JSON    LogFormat = 2
	LogFormat_LOG_FORMAT_BSON    LogFormat = 3
)

var LogFormat_name = map[int32]string{
	0: "LOG_FORMAT_UNKNOWN",
	1: "LOG_FORMAT_TEXT",
	2: "LOG_FORMAT_JSON",
	3: "LOG_FORMAT_BSON",
}

var LogFormat_value = map[string]int32{
	"LOG_FORMAT_UNKNOWN": 0,
	"LOG_FORMAT_TEXT":    1,
	"LOG_FORMAT_JSON":    2,
	"LOG_FORMAT_BSON":    3,
}

func (x LogFormat) String() string {
	return proto.EnumName(LogFormat_name, int32(x))
}

func (LogFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c4f5c52c3a3ee6d6, []int{0}
}

type LogInfo struct {
	Project              string               `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Version              string               `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Variant              string               `protobuf:"bytes,3,opt,name=variant,proto3" json:"variant,omitempty"`
	TaskName             string               `protobuf:"bytes,4,opt,name=task_name,json=taskName,proto3" json:"task_name,omitempty"`
	TaskId               string               `protobuf:"bytes,5,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Execution            int32                `protobuf:"varint,6,opt,name=execution,proto3" json:"execution,omitempty"`
	TestName             string               `protobuf:"bytes,7,opt,name=test_name,json=testName,proto3" json:"test_name,omitempty"`
	Trial                int32                `protobuf:"varint,8,opt,name=trial,proto3" json:"trial,omitempty"`
	ProcName             string               `protobuf:"bytes,9,opt,name=proc_name,json=procName,proto3" json:"proc_name,omitempty"`
	Format               LogFormat            `protobuf:"varint,10,opt,name=format,proto3,enum=cedar.LogFormat" json:"format,omitempty"`
	Arguments            map[string]string    `protobuf:"bytes,11,rep,name=arguments,proto3" json:"arguments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Mainline             bool                 `protobuf:"varint,12,opt,name=mainline,proto3" json:"mainline,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogInfo) Reset()         { *m = LogInfo{} }
func (m *LogInfo) String() string { return proto.CompactTextString(m) }
func (*LogInfo) ProtoMessage()    {}
func (*LogInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4f5c52c3a3ee6d6, []int{0}
}

func (m *LogInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogInfo.Unmarshal(m, b)
}
func (m *LogInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogInfo.Marshal(b, m, deterministic)
}
func (m *LogInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogInfo.Merge(m, src)
}
func (m *LogInfo) XXX_Size() int {
	return xxx_messageInfo_LogInfo.Size(m)
}
func (m *LogInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LogInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LogInfo proto.InternalMessageInfo

func (m *LogInfo) GetProject() string {
	if m != nil {
		return m.Project
	}
	return ""
}

func (m *LogInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *LogInfo) GetVariant() string {
	if m != nil {
		return m.Variant
	}
	return ""
}

func (m *LogInfo) GetTaskName() string {
	if m != nil {
		return m.TaskName
	}
	return ""
}

func (m *LogInfo) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

func (m *LogInfo) GetExecution() int32 {
	if m != nil {
		return m.Execution
	}
	return 0
}

func (m *LogInfo) GetTestName() string {
	if m != nil {
		return m.TestName
	}
	return ""
}

func (m *LogInfo) GetTrial() int32 {
	if m != nil {
		return m.Trial
	}
	return 0
}

func (m *LogInfo) GetProcName() string {
	if m != nil {
		return m.ProcName
	}
	return ""
}

func (m *LogInfo) GetFormat() LogFormat {
	if m != nil {
		return m.Format
	}
	return LogFormat_LOG_FORMAT_UNKNOWN
}

func (m *LogInfo) GetArguments() map[string]string {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (m *LogInfo) GetMainline() bool {
	if m != nil {
		return m.Mainline
	}
	return false
}

func (m *LogInfo) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type Loglines struct {
	Lines                []*LogLine `protobuf:"bytes,1,rep,name=lines,proto3" json:"lines,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Loglines) Reset()         { *m = Loglines{} }
func (m *Loglines) String() string { return proto.CompactTextString(m) }
func (*Loglines) ProtoMessage()    {}
func (*Loglines) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4f5c52c3a3ee6d6, []int{1}
}

func (m *Loglines) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Loglines.Unmarshal(m, b)
}
func (m *Loglines) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Loglines.Marshal(b, m, deterministic)
}
func (m *Loglines) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Loglines.Merge(m, src)
}
func (m *Loglines) XXX_Size() int {
	return xxx_messageInfo_Loglines.Size(m)
}
func (m *Loglines) XXX_DiscardUnknown() {
	xxx_messageInfo_Loglines.DiscardUnknown(m)
}

var xxx_messageInfo_Loglines proto.InternalMessageInfo

func (m *Loglines) GetLines() []*LogLine {
	if m != nil {
		return m.Lines
	}
	return nil
}

type LogLine struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data                 string               `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogLine) Reset()         { *m = LogLine{} }
func (m *LogLine) String() string { return proto.CompactTextString(m) }
func (*LogLine) ProtoMessage()    {}
func (*LogLine) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4f5c52c3a3ee6d6, []int{2}
}

func (m *LogLine) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogLine.Unmarshal(m, b)
}
func (m *LogLine) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogLine.Marshal(b, m, deterministic)
}
func (m *LogLine) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogLine.Merge(m, src)
}
func (m *LogLine) XXX_Size() int {
	return xxx_messageInfo_LogLine.Size(m)
}
func (m *LogLine) XXX_DiscardUnknown() {
	xxx_messageInfo_LogLine.DiscardUnknown(m)
}

var xxx_messageInfo_LogLine proto.InternalMessageInfo

func (m *LogLine) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *LogLine) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type LogEndInfo struct {
	ExitCode             int32                `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	CompletedAt          *timestamp.Timestamp `protobuf:"bytes,2,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *LogEndInfo) Reset()         { *m = LogEndInfo{} }
func (m *LogEndInfo) String() string { return proto.CompactTextString(m) }
func (*LogEndInfo) ProtoMessage()    {}
func (*LogEndInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4f5c52c3a3ee6d6, []int{3}
}

func (m *LogEndInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogEndInfo.Unmarshal(m, b)
}
func (m *LogEndInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogEndInfo.Marshal(b, m, deterministic)
}
func (m *LogEndInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogEndInfo.Merge(m, src)
}
func (m *LogEndInfo) XXX_Size() int {
	return xxx_messageInfo_LogEndInfo.Size(m)
}
func (m *LogEndInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_LogEndInfo.DiscardUnknown(m)
}

var xxx_messageInfo_LogEndInfo proto.InternalMessageInfo

func (m *LogEndInfo) GetExitCode() int32 {
	if m != nil {
		return m.ExitCode
	}
	return 0
}

func (m *LogEndInfo) GetCompletedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CompletedAt
	}
	return nil
}

func init() {
	proto.RegisterEnum("cedar.LogFormat", LogFormat_name, LogFormat_value)
	proto.RegisterType((*LogInfo)(nil), "cedar.LogInfo")
	proto.RegisterMapType((map[string]string)(nil), "cedar.LogInfo.ArgumentsEntry")
	proto.RegisterType((*Loglines)(nil), "cedar.Loglines")
	proto.RegisterType((*LogLine)(nil), "cedar.LogLine")
	proto.RegisterType((*LogEndInfo)(nil), "cedar.LogEndInfo")
}

func init() { proto.RegisterFile("buildlogger.proto", fileDescriptor_c4f5c52c3a3ee6d6) }

var fileDescriptor_c4f5c52c3a3ee6d6 = []byte{
	// 529 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x52, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0x26, 0xed, 0xd2, 0x26, 0xaf, 0x63, 0x14, 0x83, 0xc0, 0xea, 0x40, 0x44, 0x15, 0x87, 0x88,
	0x43, 0x86, 0xc6, 0x65, 0xfc, 0x3a, 0x74, 0xa8, 0x43, 0x83, 0xd0, 0x4a, 0xa1, 0x68, 0x88, 0x4b,
	0xe5, 0x26, 0xaf, 0xc1, 0x2c, 0xb1, 0x2b, 0xc7, 0x9d, 0xd8, 0x5f, 0xce, 0x15, 0xd9, 0x49, 0x5b,
	0xd8, 0x65, 0x37, 0x7f, 0xdf, 0xf7, 0x7e, 0xf9, 0x7d, 0x0f, 0xee, 0x2f, 0xd6, 0xbc, 0xc8, 0x0a,
	0x99, 0xe7, 0xa8, 0xa2, 0x95, 0x92, 0x5a, 0x12, 0x37, 0xc5, 0x8c, 0xa9, 0xc1, 0xb3, 0x5c, 0xca,
	0xbc, 0xc0, 0x23, 0x4b, 0x2e, 0xd6, 0xcb, 0x23, 0xcd, 0x4b, 0xac, 0x34, 0x2b, 0x57, 0x75, 0xdc,
	0xf0, 0x4f, 0x1b, 0xba, 0xb1, 0xcc, 0xcf, 0xc5, 0x52, 0x12, 0x0a, 0xdd, 0x95, 0x92, 0xbf, 0x30,
	0xd5, 0xd4, 0x09, 0x9c, 0xd0, 0x4f, 0x36, 0xd0, 0x28, 0x57, 0xa8, 0x2a, 0x2e, 0x05, 0x6d, 0xd5,
	0x4a, 0x03, 0xad, 0xc2, 0x14, 0x67, 0x42, 0xd3, 0x76, 0xa3, 0xd4, 0x90, 0x1c, 0x82, 0xaf, 0x59,
	0x75, 0x39, 0x17, 0xac, 0x44, 0xba, 0x67, 0x35, 0xcf, 0x10, 0x13, 0x56, 0x22, 0x79, 0x0c, 0x5d,
	0x2b, 0xf2, 0x8c, 0xba, 0x56, 0xea, 0x18, 0x78, 0x9e, 0x91, 0x27, 0xe0, 0xe3, 0x6f, 0x4c, 0xd7,
	0xda, 0xf4, 0xea, 0x04, 0x4e, 0xe8, 0x26, 0x3b, 0xc2, 0xd6, 0xc4, 0x4a, 0xd7, 0x35, 0xbb, 0x4d,
	0x4d, 0xac, 0xb4, 0xad, 0xf9, 0x10, 0x5c, 0xad, 0x38, 0x2b, 0xa8, 0x67, 0xd3, 0x6a, 0x60, 0x52,
	0x56, 0x4a, 0xa6, 0x75, 0x8a, 0x5f, 0xa7, 0x18, 0xc2, 0xa6, 0x84, 0xd0, 0x59, 0x4a, 0x55, 0x32,
	0x4d, 0x21, 0x70, 0xc2, 0x83, 0xe3, 0x7e, 0x64, 0xd7, 0x16, 0xc5, 0x32, 0x3f, 0xb3, 0x7c, 0xd2,
	0xe8, 0xe4, 0x2d, 0xf8, 0x4c, 0xe5, 0xeb, 0x12, 0x85, 0xae, 0x68, 0x2f, 0x68, 0x87, 0xbd, 0xe3,
	0xa7, 0xbb, 0x60, 0xb3, 0xbe, 0x68, 0xb4, 0xd1, 0xc7, 0x42, 0xab, 0xeb, 0x64, 0x17, 0x4f, 0x06,
	0xe0, 0x95, 0x8c, 0x8b, 0x82, 0x0b, 0xa4, 0xfb, 0x81, 0x13, 0x7a, 0xc9, 0x16, 0x93, 0xd7, 0x00,
	0xa9, 0x42, 0xa6, 0x31, 0x9b, 0x33, 0x4d, 0xef, 0x06, 0x4e, 0xd8, 0x3b, 0x1e, 0x44, 0xb5, 0x6d,
	0xd1, 0xc6, 0xb6, 0x68, 0xb6, 0xb1, 0x2d, 0xf1, 0x9b, 0xe8, 0x91, 0x1e, 0xbc, 0x83, 0x83, 0xff,
	0x7b, 0x92, 0x3e, 0xb4, 0x2f, 0xf1, 0xba, 0x71, 0xcf, 0x3c, 0xcd, 0x52, 0xae, 0x58, 0xb1, 0xc6,
	0xc6, 0xb7, 0x1a, 0xbc, 0x69, 0x9d, 0x38, 0xc3, 0x97, 0xe0, 0xc5, 0x32, 0x37, 0x33, 0x54, 0xe4,
	0x39, 0xb8, 0xf6, 0x41, 0x1d, 0xfb, 0xb3, 0x83, 0xdd, 0xcf, 0x62, 0x2e, 0x30, 0xa9, 0xc5, 0xe1,
	0x85, 0x3d, 0x15, 0xc3, 0x90, 0x13, 0xf0, 0xb7, 0x97, 0x64, 0xdb, 0xdd, 0x32, 0xf4, 0x36, 0x98,
	0x10, 0xd8, 0xcb, 0x98, 0x66, 0xcd, 0x3c, 0xf6, 0x3d, 0xfc, 0x09, 0x10, 0xcb, 0x7c, 0x2c, 0x32,
	0x7b, 0x86, 0x87, 0xe6, 0x04, 0xb8, 0x9e, 0xa7, 0x32, 0x43, 0x5b, 0xdb, 0x4d, 0x3c, 0x43, 0x7c,
	0x90, 0x19, 0x92, 0xf7, 0xb0, 0x9f, 0xca, 0x72, 0x55, 0x60, 0xb3, 0xb0, 0xd6, 0xad, 0xbd, 0x7b,
	0xdb, 0xf8, 0x91, 0x7e, 0xb1, 0x00, 0x7f, 0xeb, 0x2d, 0x79, 0x04, 0x24, 0x9e, 0x7e, 0x9c, 0x9f,
	0x4d, 0x93, 0x2f, 0xa3, 0xd9, 0xfc, 0xdb, 0xe4, 0xf3, 0x64, 0x7a, 0x31, 0xe9, 0xdf, 0x21, 0x0f,
	0xe0, 0xde, 0x3f, 0xfc, 0x6c, 0xfc, 0x7d, 0xd6, 0x77, 0x6e, 0x90, 0x9f, 0xbe, 0x4e, 0x27, 0xfd,
	0xd6, 0x0d, 0xf2, 0xd4, 0x90, 0xed, 0x53, 0xf8, 0xe1, 0x71, 0xa1, 0x51, 0x09, 0x56, 0x2c, 0x3a,
	0x76, 0xa0, 0x57, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x24, 0xb0, 0x58, 0xbb, 0xa2, 0x03, 0x00,
	0x00,
}
